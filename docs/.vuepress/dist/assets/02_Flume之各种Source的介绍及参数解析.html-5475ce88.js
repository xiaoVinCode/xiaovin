import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,f as s}from"./app-242a2990.js";const t={},r=s(`<h2 id="一、source介绍" tabindex="-1"><a class="header-anchor" href="#一、source介绍" aria-hidden="true">#</a> 一、Source介绍</h2><p>Source用于对接各种数据源，将收集到的事件发送到临时存储Channel中。</p><p>常用的source类型有：Avro Source、Exec Source、Kafka Source、TaildirSource、Spooling Directory Source等，其他类型source请查阅Flume-NG官方介绍。</p><table><thead><tr><th></th><th>source类型</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>Thrift Source</td><td>支持Thrift协议，Thrift Source监听Thrift端口，接收外部Thrift客户端发送过来的Thrift Event数据。在多级流中，Thrift Source可以和前一个Flume Agent的Thrift Sink配对，建立分层收集拓扑。Thrift Source支持基于Kerberos身份验证的安全模式</td></tr><tr><td>2</td><td>Kafka Source</td><td>从Kafka Topic中读取数据，Kafka Source相当于消息队列的Consumer</td></tr><tr><td>3</td><td>Exec Source</td><td>基于Unix的command在标准输出上生产数据。Exec Source在启动时调用的Unix命令，该命令进程会持续地把标准日志数据输出到Exec Source，如果命令进程关闭，Exec Source也会关闭。Exec Source支持cat [named pipe]或者tail -F [file]命令。Exec Source最大的问题就是数据有可能丢失，因为当Channel接收Exec Source数据出错时或者抛出异常时，Exec Client并不能捕获到该错误</td></tr><tr><td>4</td><td>Spooling Directory Source</td><td>监控指定目录内数据变更。Spooling Directory Source监听系统上的指定目录，当目录中有新的文件创建时，Spooling Directory Source会把新文件的内容读取并推送到Channel中，并且把已读取的文件重命名成指定格式或者把文件删除。由于数据是以文件的形式存放的系统中，Spooling Directory Source的可靠性非常高，即使是Flume Agent崩溃或者重启，数据也可以恢复。Spool Source有2个注意地方，第一个是拷贝到spool目录下的文件不可以再打开编辑，第二个是spool目录下不可包含相应的子目录Spooling Directory Source适合用于同步新文件，但不适合对实时追加日志的文件进行监听并同步。</td></tr><tr><td>5</td><td>Taildir Source</td><td>Taildir Source是1.7版本的新特性，综合了Spooling Directory Source和Exec Source的优点。Taildir Source可实时监控一批文件，并记录每个文件最新消费位置，agent进程重启后不会有重复消费的问题。使用时建议用1.8.0版本的flume，1.8.0版本中解决了Taildir Source一个可能会丢数据的bug。</td></tr><tr><td>6</td><td>Netcat Source</td><td>监控某个端口，将流经端口的每一个文本行数据作为Event输入</td></tr><tr><td>7</td><td>HTTP Source</td><td>基于HTTP POST或GET方式的数据源，支持JSON、BLOB表示形式。其中GET主要用户测试，不建议生产环境使用。HTTP数据通过handler（实现HTTPSourceHandler接口）转换成Event，该handler接收HttpServletRequest并返回Event数组。如果handler出现异常，HTTP Source返回400错误。如果Channel满了或者Channel无法接收Event，HTTP Source返回503错误。</td></tr><tr><td>8</td><td>Syslog Sources</td><td>读取syslog数据，产生Event，支持UDP和TCP两种协议。这个Source分成三类SyslogTCP Source、Multiport Syslog TCP Source（多端口）与SyslogUDP Source。其中TCP Source为每一个用回车（\\ n）来分隔的字符串创建一个新的事件。而UDP Source将整个消息作为一个单一的事件。</td></tr><tr><td>9</td><td>JMS Source</td><td>从JMS系统（消息、主题）中读取数据，该Source目前只在ActiveMQ中测试</td></tr><tr><td>10</td><td>Stress Source</td><td>压力测试用。StressSource 是内部负载生成source的实现，允许用户配置Event有效载荷的大小。</td></tr><tr><td>11</td><td>Twitter 1% firehose Source</td><td>通过API持续下载Twitter数据，试验性质</td></tr><tr><td>12</td><td>Scribe Source</td><td>Scribe是另一种类型的提取系统。采用现有的Scribe提取系统，Flume应该使用基于Thrift的兼容传输协议的ScribeSource。</td></tr><tr><td>13</td><td>Sequence Generator Source</td><td>序列生成器数据源，生产序列数据，实验性质</td></tr><tr><td>14</td><td>Avro Source</td><td>支持Avro协议（Avro RPC），Avro Source监听Avro端口，接收外部Avro客户端发送过来的Avro Event数据。在多级流中，Avro Source可以和前一个Flume Agent的Avro Sink配对，建立分层收集拓扑</td></tr></tbody></table><h3 id="_1、avro-source" tabindex="-1"><a class="header-anchor" href="#_1、avro-source" aria-hidden="true">#</a> 1、Avro Source</h3><p>支持Avro协议，接收RPC事件请求。Avro Source通过监听Avro端口接收外部Avro客户端流事件（event），在Flume的多层架构中经常被使用接收上游Sink发送的event。</p><h4 id="_1-配置参数解析" tabindex="-1"><a class="header-anchor" href="#_1-配置参数解析" aria-hidden="true">#</a> ① 配置参数解析：</h4><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>avro</td><td>类型名称</td></tr><tr><td>bind</td><td></td><td>绑定的IP</td></tr><tr><td>port</td><td></td><td>监听的端口</td></tr><tr><td>threads</td><td></td><td>（重要）接收请求的线程数，当需要接收多个avro客户端的数据流时要设置合适的线程数，否则会造成avro客户端数据流积压。</td></tr></tbody></table><h4 id="_2-简单模板" tabindex="-1"><a class="header-anchor" href="#_2-简单模板" aria-hidden="true">#</a> ② 简单模板</h4><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 命名 Agent 上的组件</span>
<span class="token key attr-name">agent_name.sources</span> <span class="token punctuation">=</span> <span class="token value attr-value">source_name</span>
<span class="token key attr-name">agent_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks</span> <span class="token punctuation">=</span> <span class="token value attr-value">sink_name</span>

<span class="token comment"># source</span>
<span class="token key attr-name">agent_name.sources.source_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">avro</span>
<span class="token key attr-name">agent_name.sources.source_name.bind</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
<span class="token key attr-name">agent_name.sources.source_name.port</span> <span class="token punctuation">=</span> <span class="token value attr-value">9876</span>
<span class="token key attr-name">agent_name.sources.source_name.threads</span><span class="token punctuation">=</span> <span class="token value attr-value">3</span>

<span class="token comment"># channel</span>
<span class="token key attr-name">agent_name.channels.channel_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">file</span>
XXX
XXX

<span class="token comment"># sink</span>
<span class="token key attr-name">agent_name.sinks.sink_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">hdfs</span>
XXX
XXX

<span class="token comment"># source | channel | sink 关联</span>
<span class="token key attr-name">agent_name.sources.source_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks.sink_name.channel</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>说明：这里设置 avro 启动接收客户端数据流的最大线程数为3。</p></blockquote><h3 id="_2、kafka-source" tabindex="-1"><a class="header-anchor" href="#_2、kafka-source" aria-hidden="true">#</a> 2、Kafka Source</h3><p>对接分布式消息队列 Kafka，作为 Kafka 的消费者持续从kafka中拉取数据，如果多个 Kafka Source 同时消费kafka中同一个主题（topic），则 Kafka Source 的kafka.consumer.group.id 应该设置成相同的组id，多个 Kafka Source 之间不会消费重复的数据，每一个Source 都会拉取 Topic 下的不同数据。</p><h4 id="_1-配置参数解析-1" tabindex="-1"><a class="header-anchor" href="#_1-配置参数解析-1" aria-hidden="true">#</a> ① 配置参数解析：</h4><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>org.apache.flume.source.kafka.KafkaSource</td><td>类型名称</td></tr><tr><td>kafka.bootstrap.servers</td><td></td><td>Kafka broker列表，格式为ip1:port1,ip2:port2……，建议配置多个值提高容错能力，多个值之间用逗号隔开。</td></tr><tr><td>kafka.topics</td><td></td><td>消费的topic名称。</td></tr><tr><td>kafka.topics.regex</td><td></td><td>通过正则表达式匹配一组topic，设置此选项会覆盖kafka.topics选项的设置。</td></tr><tr><td>kafka.consumer.group.id</td><td>flume</td><td>kafka source所属组id</td></tr><tr><td>batchSize</td><td>1000</td><td>批量写入channel的最大消息数</td></tr><tr><td>batchDurationMillis</td><td>1000</td><td>等待批量写入channel的最长时间，这个参数和batchSize两个参数只要有一个满足都会触发批量写入channel操作，单位：毫秒</td></tr></tbody></table><h4 id="_2-简单模板-1" tabindex="-1"><a class="header-anchor" href="#_2-简单模板-1" aria-hidden="true">#</a> ② 简单模板</h4><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 命名 Agent 上的组件</span>
<span class="token key attr-name">agent_name.sources</span> <span class="token punctuation">=</span> <span class="token value attr-value">source_name</span>
<span class="token key attr-name">agent_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks</span> <span class="token punctuation">=</span> <span class="token value attr-value">sink_name</span>

<span class="token comment"># source</span>
<span class="token key attr-name">agent_name.sources.source_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">org.apache.flume.source.kafka.KafkaSource</span>
<span class="token key attr-name">agent_name.sources.source_name.batchSize</span> <span class="token punctuation">=</span> <span class="token value attr-value">5000</span>
<span class="token key attr-name">agent_name.sources.source_name.batchDurationMillis</span> <span class="token punctuation">=</span> <span class="token value attr-value">2000</span>
<span class="token key attr-name">agent_name.sources.source_name.kafka.bootstrap.servers</span> <span class="token punctuation">=</span> <span class="token value attr-value">zkServer01:9092,zkServer02:9092</span>
<span class="token key attr-name">agent_name.sources.source_name.kafka.topics</span> <span class="token punctuation">=</span> <span class="token value attr-value">test_topic</span>
<span class="token key attr-name">agent_name.sources.source_name.kafka.consumer.group.id</span> <span class="token punctuation">=</span> <span class="token value attr-value">flume_consumer_test</span>

<span class="token comment"># channel</span>
<span class="token key attr-name">agent_name.channels.channel_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">file</span>
XXX
XXX

<span class="token comment"># sink</span>
<span class="token key attr-name">agent_name.sinks.sink_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">hdfs</span>
XXX
XXX

<span class="token comment"># source | channel | sink 关联</span>
<span class="token key attr-name">agent_name.sources.source_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks.sink_name.channel</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>说明：这里设置 Source 批量写入 Channel 的最大消息数为5000，Source 等待批量写入 Channel 的最长时间为2秒，Channel 拉取数据的 Kafka Broker 列表为zkServer01:9092,zkServer02:9092，Source 消费的主题名称为 test_topic ，Source 所属的consumer group id 为 flume_consumer_test。</p></blockquote><h3 id="_3、exec-source" tabindex="-1"><a class="header-anchor" href="#_3、exec-source" aria-hidden="true">#</a> 3、Exec Source</h3><p>支持Linux命令，收集标准输出数据或者通过tail -f file的方式监听指定文件。ExecSource可以实现实时的消息传输，但是它不记录已经读取文件的位置，不支持断点续传，如果Exec Source重启或者挂掉都会造成后续增加的消息丢失，建议只是在测试环境使用。</p><h4 id="_1-配置参数解析-2" tabindex="-1"><a class="header-anchor" href="#_1-配置参数解析-2" aria-hidden="true">#</a> ① 配置参数解析：</h4><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>exec</td><td>类型名称</td></tr><tr><td>command</td><td></td><td>Linux命令</td></tr></tbody></table><h4 id="_2-简单模板-2" tabindex="-1"><a class="header-anchor" href="#_2-简单模板-2" aria-hidden="true">#</a> ② 简单模板</h4><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 命名 Agent 上的组件</span>
<span class="token key attr-name">agent_name.sources</span> <span class="token punctuation">=</span> <span class="token value attr-value">source_name</span>
<span class="token key attr-name">agent_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks</span> <span class="token punctuation">=</span> <span class="token value attr-value">sink_name</span>

<span class="token comment"># source</span>
<span class="token key attr-name">agent_name.sources.source_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">exec</span>
<span class="token key attr-name">agent_name.sources.source_name.command</span> <span class="token punctuation">=</span> <span class="token value attr-value">tail -F /var/log/test.log</span>

<span class="token comment"># channel</span>
<span class="token key attr-name">agent_name.channels.channel_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">file</span>
XXX
XXX

<span class="token comment"># sink</span>
<span class="token key attr-name">agent_name.sinks.sink_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">hdfs</span>
XXX
XXX

<span class="token comment"># source | channel | sink 关联</span>
<span class="token key attr-name">agent_name.sources.source_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks.sink_name.channel</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>说明：这里设置 Source 通过tail -F命令监听/var/log/test.log文件。</p></blockquote><h3 id="_4、spooling-directory-source" tabindex="-1"><a class="header-anchor" href="#_4、spooling-directory-source" aria-hidden="true">#</a> 4、Spooling Directory Source</h3><p>监听一个文件夹，收集文件夹下新文件数据，收集完新文件数据会将文件名称的后缀改为．COMPLETED，缺点是不支持老文件新增数据的收集，并且不能够对嵌套文件夹递归监听。</p><h4 id="_1-配置参数解析-3" tabindex="-1"><a class="header-anchor" href="#_1-配置参数解析-3" aria-hidden="true">#</a> ① 配置参数解析：</h4><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>spooldir</td><td>类型名称</td></tr><tr><td>spoolDir</td><td></td><td>source监听的文件夹。</td></tr><tr><td>fileHeader</td><td>false</td><td>是否添加文件的绝对路径到event的header中</td></tr><tr><td>fileHeaderKey</td><td>file</td><td>添加到event header中文件绝对路径的键值</td></tr><tr><td>selector.type</td><td>replicating</td><td>选择器类型（可选值为replicating或multiplexing）</td></tr><tr><td>fileSuffix</td><td>COMPLETED</td><td>收集完新文件数据给文件添加的后缀名称</td></tr></tbody></table><h4 id="_2-简单模板-3" tabindex="-1"><a class="header-anchor" href="#_2-简单模板-3" aria-hidden="true">#</a> ② 简单模板</h4><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 命名 Agent 上的组件</span>
<span class="token key attr-name">agent_name.sources</span> <span class="token punctuation">=</span> <span class="token value attr-value">source_name</span>
<span class="token key attr-name">agent_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks</span> <span class="token punctuation">=</span> <span class="token value attr-value">sink_name</span>

<span class="token comment"># source</span>
<span class="token key attr-name">agent_name.sources.source_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">spooldir</span>
<span class="token key attr-name">agent_name.sources.source_name.spoolDir</span> <span class="token punctuation">=</span> <span class="token value attr-value">/var/log/test.log</span>
<span class="token key attr-name">agent_name.sources.source_name.fileHeader</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>

<span class="token comment"># channel</span>
<span class="token key attr-name">agent_name.channels.channel_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">file</span>
XXX
XXX

<span class="token comment"># sink</span>
<span class="token key attr-name">agent_name.sinks.sink_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">hdfs</span>
XXX
XXX

<span class="token comment"># source | channel | sink 关联</span>
<span class="token key attr-name">agent_name.sources.source_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks.sink_name.channel</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>说明：这里设置 Source 监听的文件夹路径为/usr/local/flume/log，在 event 头信息中添加文件绝对路径信息。</p></blockquote><h3 id="_5、taildir-source-建议修改源码-后续补充相关操作文章" tabindex="-1"><a class="header-anchor" href="#_5、taildir-source-建议修改源码-后续补充相关操作文章" aria-hidden="true">#</a> 5、Taildir Source (建议修改源码，后续补充相关操作文章)</h3><p>监听一个文件或文件夹，通过正则表达式匹配需要监听的数据源文件，支持文件夹嵌套递归监听（重要source）, Taildir Source将通过监听的文件位置写入到文件中实现断点续传，并且能够保证没有重复数据的读取。</p><h4 id="_1-配置参数解析-4" tabindex="-1"><a class="header-anchor" href="#_1-配置参数解析-4" aria-hidden="true">#</a> ① 配置参数解析：</h4><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>TAILDIR</td><td>类型名称</td></tr><tr><td>positionFile</td><td></td><td>保存监听文件读取位置的文件路径</td></tr><tr><td>skipToEnd</td><td>false</td><td>在位置文件中没有保存监听文件的位置是否直接跳到文件的末尾</td></tr><tr><td>idleTimeout</td><td>120000</td><td>关闭空闲文件延迟时间，如果有新的记录添加到已关闭的空闲文件taildir srouce将继续打开该空闲文件，单位：毫秒。</td></tr><tr><td>writePosInterval</td><td>3000</td><td>向保存读取位置文件中写入读取文件位置的时间间隔（单位：毫秒）</td></tr><tr><td>batchSize</td><td>100</td><td>批量写入channel最大event数</td></tr><tr><td>maxBackoffSleep</td><td>5000</td><td>每次最后一次尝试没有获取到监听文件最新数据的最大延迟时间，单位：毫秒。</td></tr><tr><td>backoffSleepIncrement</td><td>1000</td><td>每次最后一次尝试没有获取到监听文件最新数据后增加延迟时间的幅度</td></tr><tr><td>cachePatternMatching</td><td>true</td><td>监听的文件夹下通过正则表达式匹配的文件数量可能会很多，将匹配成功的监听文件列表和读取文件列表的顺序都添加到缓存中可以提高性能</td></tr><tr><td>fileHeader</td><td>false</td><td>是否添加文件的绝对路径到event的header中</td></tr><tr><td>fileHeaderKey</td><td>file</td><td>添加到event header中文件绝对路径的键值</td></tr><tr><td>filegroups</td><td></td><td>监听的文件组列表，taildirsource通过文件组监听多个目录或文件</td></tr><tr><td>filegroups.&lt;filegroupName&gt;</td><td></td><td>表达式路径或者监听指定文件路径</td></tr></tbody></table><h4 id="_2-简单模板-4" tabindex="-1"><a class="header-anchor" href="#_2-简单模板-4" aria-hidden="true">#</a> ② 简单模板</h4><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 命名 Agent 上的组件</span>
<span class="token key attr-name">agent_name.sources</span> <span class="token punctuation">=</span> <span class="token value attr-value">source_name</span>
<span class="token key attr-name">agent_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks</span> <span class="token punctuation">=</span> <span class="token value attr-value">sink_name</span>

<span class="token comment"># source</span>
<span class="token key attr-name">agent_name.sources.source_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">TAILDIR</span>
<span class="token key attr-name">agent_name.sources.source_name.filegroups</span> <span class="token punctuation">=</span> <span class="token value attr-value">f1 f2</span>
<span class="token key attr-name">agent_name.sources.source_name.filegroups.f1</span> <span class="token punctuation">=</span> <span class="token value attr-value">/var/log/test_01.log</span>
<span class="token key attr-name">agent_name.sources.source_name.filegroups.f2</span> <span class="token punctuation">=</span> <span class="token value attr-value">/var/log/test_02/*.log*</span>
<span class="token key attr-name">agent_name.sources.source_name.fileHeader</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
<span class="token key attr-name">agent_name.sources.source_name.positionFile</span> <span class="token punctuation">=</span> <span class="token value attr-value">/usr/local/flume/position/taildir_position.json</span>

<span class="token comment"># channel</span>
<span class="token key attr-name">agent_name.channels.channel_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">file</span>
XXX
XXX

<span class="token comment"># sink</span>
<span class="token key attr-name">agent_name.sinks.sink_name.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">hdfs</span>
XXX
XXX

<span class="token comment"># source | channel | sink 关联</span>
<span class="token key attr-name">agent_name.sources.source_name.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
<span class="token key attr-name">agent_name.sinks.sink_name.channel</span> <span class="token punctuation">=</span> <span class="token value attr-value">channel_name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>说明：保存监听文件读取位置信息的文件路径为/usr/local/flume/position/taildir_position.json，监听文件列表包含两个监听文件组f1、f2，f1监听指定log文件/var/log/test_01.log ，f2通过正则表达式匹配/var/log/test_02/路径下包含log关键字的所有文件，并且将文件的绝对路径添加到event的头信息中。</p></blockquote>`,39),l=[r];function c(i,d){return a(),e("div",null,l)}const p=n(t,[["render",c],["__file","02_Flume之各种Source的介绍及参数解析.html.vue"]]);export{p as default};
