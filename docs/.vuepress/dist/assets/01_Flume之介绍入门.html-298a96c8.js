import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c,a as n,b as a,d as s,f as t}from"./app-242a2990.js";const p={},u=t('<h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h2><p>Flume是一个高可靠、高可用、分布式的用于不同数据源的流式数据采集、收集、聚合系统。flume最简单的数据流模型如下图所示。</p><p>Flume是Cloudera提供的一个高可靠、高可用、分布式的用于不同数据源的流式数据采集、收集、聚合系统。</p><p>Flume支持在日志系统中定制各类数据发送方，用于收集数据；同时，Flume提供对数据进行简单处理，并写到各种数据接收方（可定制）的能力，一般的采集需求，通过对flume的简单配置即可实现。针对特殊场景也具备良好的自定义扩展能力。因此，flume可以适用于大部分的日常数据采集场景。。</p><p>Agent就是一个Java进程，它接收来自外部的数据，并将数据传递到数据中心（如HDFS、HBase等）或下一个Agent。一个Agent有Source、Channel、Sink三大组件组成，通过配置文件可以将组件连接在一起从而形成数据流。</p><p>Flume的核心是把数据从数据源(source)收集过来，再将收集到的数据送到指定的目的地(sink)。为了保证输送的过程一定成功，在送到目的地(sink)之前，会先缓存数据(channel), 待数据真正到达目的地(sink)后，flume在删除自己缓存的数据。</p><p>当前Flume有两个版本。Flume 0.9X版本的统称Flume OG（original generation），Flume1.X版本的统称Flume NG（next generation）。由于Flume NG经过核心组件、核心配置以及代码架构重构，与Flume OG有很大不同，使用时请注意区分。改动的另一原因是将Flume纳入 apache 旗下，Cloudera Flume 改名为 Apache Flume。</p><h2 id="_2-基本概念" tabindex="-1"><a class="header-anchor" href="#_2-基本概念" aria-hidden="true">#</a> 2. 基本概念</h2><p>Client：Client生产数据，运行在一个独立的线程。</p><p>Event： 一个数据单元，消息头和消息体组成。（Events可以是日志记录、 avro 对象等。）</p><p>Flow： Event从源点到达目的点的迁移的抽象。</p><p>Agent： 一个独立的Flume进程，包含组件Source、 Channel、 Sink。（Agent使用JVM 运行Flume。每台机器运行一个agent，但是可以在一个agent中包含多个sources和sinks。）</p><p>Source： 数据收集组件。（source从Client收集数据，传递给Channel）</p><p>Channel： 中转Event的一个临时存储，保存由Source组件传递过来的Event。（Channel连接 sources 和 sinks ，这个有点像一个队列。）</p><p>Sink： 从Channel中读取并移除Event， 将Event传递到FlowPipeline中的下一个Agent（如果有的话）（Sink从Channel收集数据，运行在一个独立线程。）</p><h2 id="_3-运行机制" tabindex="-1"><a class="header-anchor" href="#_3-运行机制" aria-hidden="true">#</a> 3. 运行机制</h2><p>Flume系统中核心的角色是<strong>agent</strong>，agent本身是一个Java进程，一般运行在日志收集节点。</p><figure><img src="https://static-resource-yang.oss-cn-shenzhen.aliyuncs.com/typora_pic/202304151105476.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>每一个agent相当于一个数据传递员，内部有三个组件：</p><p><strong>Source</strong>：采集源，用于跟数据源对接，以获取数据；</p><p><strong>Sink</strong>：下沉地，采集数据的传送目的，用于往下一级agent传递数据或者往最终存储系统传递数据；</p><p><strong>Channel</strong>：agent内部的数据传输通道，用于从source将数据传递到sink；</p><p>在整个数据的传输的过程中，流动的是<strong>event</strong>，它是Flume内部数据传输的最基本单元。event将传输的数据进行封装。如果是文本文件，通常是一行记录，event也是事务的基本单位。event从source，流向channel，再到sink，本身为一个字节数组，并可携带headers(头信息)信息。event代表着一个数据的最小完整单元，从外部数据源来，向外部的目的地去。</p><p>Event是Flume数据流传输过程中的一个基本单位，由一个可选的header(键值对)和body组成。header主要用于表示数据属性及路由信息，body部分存储的是byte数组，用于表示数据本身。Event也是事务的基本单位。</p><h2 id="_4-flume采集系统结构图" tabindex="-1"><a class="header-anchor" href="#_4-flume采集系统结构图" aria-hidden="true">#</a> 4. Flume采集系统结构图</h2><h3 id="_4-1-简单结构" tabindex="-1"><a class="header-anchor" href="#_4-1-简单结构" aria-hidden="true">#</a> 4.1 简单结构</h3><p>单个agent采集数据</p><figure><img src="https://static-resource-yang.oss-cn-shenzhen.aliyuncs.com/typora_pic/202304151123197.png" alt="image-20230415112317174" tabindex="0" loading="lazy"><figcaption>image-20230415112317174</figcaption></figure><h3 id="_4-2-复杂结构" tabindex="-1"><a class="header-anchor" href="#_4-2-复杂结构" aria-hidden="true">#</a> 4.2 复杂结构</h3><p>多级agent之间串联</p><figure><img src="https://static-resource-yang.oss-cn-shenzhen.aliyuncs.com/typora_pic/202304151123368.png" alt="image-20230415112346336" tabindex="0" loading="lazy"><figcaption>image-20230415112346336</figcaption></figure><h2 id="_5-安装启动" tabindex="-1"><a class="header-anchor" href="#_5-安装启动" aria-hidden="true">#</a> 5. 安装启动</h2><h3 id="_5-1-安装包下载安装" tabindex="-1"><a class="header-anchor" href="#_5-1-安装包下载安装" aria-hidden="true">#</a> 5.1 安装包下载安装</h3>',33),r={href:"https://links.jianshu.com/go?to=http%3A%2F%2Farchive.apache.org%2Fdist%2Fflume%2F",target:"_blank",rel:"noopener noreferrer"},d={href:"https://links.jianshu.com/go?to=http%3A%2F%2Farchive.apache.org%2Fdist%2Fflume%2F",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,"解压",-1),v=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>kevin@hadoop112 software<span class="token punctuation">]</span>$ <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-flume-1.9.0-bin.tar.gz <span class="token parameter variable">-C</span> /opt/module/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>改名</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>kevin@hadoop112 software<span class="token punctuation">]</span>$ <span class="token builtin class-name">cd</span> /opt/module/
<span class="token punctuation">[</span>kevin@hadoop112 module<span class="token punctuation">]</span>$ <span class="token function">mv</span> apache-flume-1.9.0-bin flume-1.9.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>kevin@hadoop112 module<span class="token punctuation">]</span>$ <span class="token builtin class-name">cd</span> flume-1.9.0/conf/
<span class="token punctuation">[</span>kevin@hadoop112 conf<span class="token punctuation">]</span>$ <span class="token function">mv</span> flume-env.sh.template flume-env.sh
<span class="token punctuation">[</span>kevin@hadoop112 conf<span class="token punctuation">]</span>$ <span class="token function">vim</span> flume-env.sh

<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/opt/module/jdk1.8.0_241
<span class="token comment"># 优化项</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xms1024m -Xmx3072m -Dcom.sun.management.jmxremote&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-测试-监控端口数据官方案例" tabindex="-1"><a class="header-anchor" href="#_5-2-测试-监控端口数据官方案例" aria-hidden="true">#</a> 5.2 测试--监控端口数据官方案例</h3><ul><li>安装 netcat 工具</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>kevin@hadoop112 flume-1.9.0<span class="token punctuation">]</span>$ <span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">nc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>判断 44444 端口是否被占用</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token punctuation">[</span>kevin@hadoop112 flume-1.9.0<span class="token punctuation">]</span>$ <span class="token function">sudo</span> <span class="token function">netstat</span> <span class="token parameter variable">-tunlp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">44444</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建 Flume Agent 配置文件 flume-netcat-logger.conf</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>kevin@hadoop112 flume-1.9.0<span class="token punctuation">]</span>$ <span class="token function">mkdir</span> <span class="token function">jobs</span>
<span class="token punctuation">[</span>kevin@hadoop112 flume-1.9.0<span class="token punctuation">]</span>$ <span class="token builtin class-name">cd</span> jobs/
<span class="token punctuation">[</span>kevin@hadoop112 jobs<span class="token punctuation">]</span>$ <span class="token function">touch</span> flume-netcat-logger.conf
<span class="token punctuation">[</span>kevin@hadoop112 jobs<span class="token punctuation">]</span>$ <span class="token function">vim</span> flume-netcat-logger.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 flume-netcat-logger.conf 文件中添加如下内容。</li></ul><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># Name the components on this agent</span>
<span class="token key attr-name">a1.sources</span> <span class="token punctuation">=</span> <span class="token value attr-value">r1</span>
<span class="token key attr-name">a1.sinks</span> <span class="token punctuation">=</span> <span class="token value attr-value">k1</span>
<span class="token key attr-name">a1.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">c1</span>

<span class="token comment"># Describe/configure the source</span>
<span class="token key attr-name">a1.sources.r1.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">netcat</span>
<span class="token key attr-name">a1.sources.r1.bind</span> <span class="token punctuation">=</span> <span class="token value attr-value">localhost</span>
<span class="token key attr-name">a1.sources.r1.port</span> <span class="token punctuation">=</span> <span class="token value attr-value">44444</span>

<span class="token comment"># Describe the sink</span>
<span class="token key attr-name">a1.sinks.k1.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">logger</span>

<span class="token comment"># Use a channel which buffers events in memory</span>
<span class="token key attr-name">a1.channels.c1.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">memory</span>
<span class="token key attr-name">a1.channels.c1.capacity</span> <span class="token punctuation">=</span> <span class="token value attr-value">1000</span>
<span class="token key attr-name">a1.channels.c1.transactionCapacity</span> <span class="token punctuation">=</span> <span class="token value attr-value">100</span>

<span class="token comment"># Bind the source and sink to the channel</span>
<span class="token key attr-name">a1.sources.r1.channels</span> <span class="token punctuation">=</span> <span class="token value attr-value">c1</span>
<span class="token key attr-name">a1.sinks.k1.channel</span> <span class="token punctuation">=</span> <span class="token value attr-value">c1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>先开启 flume 监听端口</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>kevin@hadoop112 flume-1.9.0<span class="token punctuation">]</span>$ bin/flume-ng agent <span class="token parameter variable">-c</span> conf/ <span class="token parameter variable">-n</span> a1 <span class="token parameter variable">-f</span> jobs/flume-netcat-logger.conf <span class="token parameter variable">-Dflume.root.logger</span><span class="token operator">=</span>INFO,console
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里成了阻塞进程</p><blockquote><p>参数说明：</p><p>--conf/-c：表示配置文件存储在 conf/目录</p><p>--name/-n：表示给 agent 起名为 a1</p><p>--conf-file/-f：flume 本次启动读取的配置文件是在 job 文件夹下的 flume-telnet.conf</p><p>文件。</p><p>-Dflume.root.logger=INFO,console ：-D 表示 flume 运行时动态修改 flume.root.logger</p><p>参数属性值，并将控制台日志打印级别设置为 INFO 级别。日志级别包括:log、info、warn、</p><p>error。</p></blockquote><ul><li>另开一个会话，使用 netcat 工具向本机的 44444 端口发送内容</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>kevin@hadoop112 ~<span class="token punctuation">]</span>$ <span class="token function">nc</span> localhost <span class="token number">44444</span>

<span class="token comment"># 然后在这个会话随便输入一些内容，回车，回看上面的阻塞进程是否接收到这里所输入的内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>退出 Ctrl + C</li></ul><h2 id="_6-其它笔记" tabindex="-1"><a class="header-anchor" href="#_6-其它笔记" aria-hidden="true">#</a> 6. 其它笔记：</h2>`,22),h={href:"https://blog.csdn.net/weixin_45866849/article/details/125729411",target:"_blank",rel:"noopener noreferrer"};function k(g,b){const e=i("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[a("地址"),s(e)]),a("："),n("a",d,[a("http://archive.apache.org/dist/flume/"),s(e)])]),m]),v,n("p",null,[n("a",h,[a("Flume的学习笔记_flume checkpoint_白居不易.的博客-CSDN博客"),s(e)])])])}const F=l(p,[["render",k],["__file","01_Flume之介绍入门.html.vue"]]);export{F as default};
